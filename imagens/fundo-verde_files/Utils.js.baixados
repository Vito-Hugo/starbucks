var Utils = {
    getCookie : function(cookieName) {

		cookieName += "=";
		
	    var cookieArray = document.cookie.split(';');
	    
	    for( var i = 0; i < cookieArray.length; i++ ) {
	    	
	        var cookieValue = cookieArray[i];
	        
	        while(cookieValue.charAt(0) == ' ') {
	        	cookieValue = cookieValue.substring(1);
	        }
	        
	        if(cookieValue.indexOf(cookieName) != -1) {
	        	return cookieValue.substring(cookieName.length, cookieValue.length);
	        }
	        
	    }
	    
	    return "";
	    
	},

	setCookie : function(cookieName, cookieValue, expirationHours) {
	    
		expirationHours = expirationHours || 24;
		
		var expirationDate = new Date();
		expirationDate.setTime( expirationDate.getTime() + (expirationHours * 3600000) ); //1 day = 24*60*60*1000
		
	    var expires = expirationHours !== "browser" ? "expires=" + expirationDate.toUTCString() : "expires=0";
	    
	    document.cookie = cookieName + "=" + cookieValue + "; " + expires + "; path=/";
	    
	},

	validateCpf : function(cpf){

		cpf = cpf.replace(/([.])/g, '').replace(/([-])/g, '');

	  var numeros, digitos, soma, i, resultado, digitos_iguais;
	  digitos_iguais = 1;
	  if (cpf.length < 11)
			return false;
	  for (i = 0; i < cpf.length - 1; i++)
			if (cpf.charAt(i) != cpf.charAt(i + 1))
				  {
				  digitos_iguais = 0;
				  break;
				  }
	  if (!digitos_iguais)
			{
			numeros = cpf.substring(0,9);
			digitos = cpf.substring(9);
			soma = 0;
			for (i = 10; i > 1; i--)
				  soma += numeros.charAt(10 - i) * i;
			resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
			if (resultado != digitos.charAt(0))
				  return false;
			numeros = cpf.substring(0,10);
			soma = 0;
			for (i = 11; i > 1; i--)
				  soma += numeros.charAt(11 - i) * i;
			resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
			if (resultado != digitos.charAt(1))
				  return false;
			return true;
			}
	  else
		  return false;

	},
	
	validatePasswordStrength: function (password) {

		var pass = password,
			errors = [];

		if (pass.length < 8 || pass.length > 25) {
			errors.push("length");
		}

		if ( ! /[0-9]/.test(pass)) {
			errors.push("number");
		}

		if ( ! /[A-Z]/.test(pass)) {
			errors.push("uppercase");
		}

		if ( ! /[a-z]/.test(pass)) {
			errors.push("lowercase");
		}

		if ( ! /[!\"#$%&'()*+,-.\/:;<=>?@[\]^_`{|}~]/.test(pass)) {
			errors.push("special")
		}

		if (/[\t\n ]/.test(pass)) {
			errors.push("spacing");
		}

		return errors;

	},
	
	extractDate: function (dateTime) {

        var date = new Date(dateTime),
            shortMonths = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
            day = ("0" + date.getDate()).slice(-2);

        return day + " " + $.utils.processML(shortMonths[date.getMonth()]) + " " + date.getFullYear();

    },

	extractTime: function (dateTime) {

        var date = new Date(dateTime),
            hours = ("0" + date.getHours()).slice(-2),
            minutes = ("0" + date.getMinutes()).slice(-2);

        return hours + ":" + minutes;

	},
	
	isMobile : {
		
		Android: function() {
	        return navigator.userAgent.match(/Android/i);
	    },
	    
	    BlackBerry: function() {
	        return navigator.userAgent.match(/BlackBerry/i);
	    },
	    
	    iOS: function() {
	        return navigator.userAgent.match(/iPhone|iPad|iPod/i);
	    },
	    
	    Opera: function() {
	        return navigator.userAgent.match(/Opera Mini/i);
	    },
	   
	    Windows: function() {
	        return navigator.userAgent.match(/IEMobile/i);
	    },
	   
	    any: function() {
	    	
	    	var self = Utils;
	    	
	        return (self.isMobile.Android() || self.isMobile.BlackBerry() || self.isMobile.iOS() || self.isMobile.Opera() || self.isMobile.Windows());
	    }
	    
	},

	removeAccents : function(strAccents){
		strAccents		= strAccents + '';
		strAccents		= strAccents.split('');
		strAccentsOut	= [];
		strAccentsLen	= strAccents.length;
		var accents		= 'ÀÁÂÃÄÅàáâãäåÒÓÔÕÕÖØòóôõöøÈÉÊËèéêëðÇçÐÌÍÎÏìíîïÙÚÛÜùúûüÑñŠšŸÿýŽž';
		var accentsOut	= ['A','A','A','A','A','A','a','a','a','a','a','a','O','O','O','O','O','O','O','o','o','o','o','o','o','E','E','E','E','e','e','e','e','e','C','c','D','I','I','I','I','i','i','i','i','U','U','U','U','u','u','u','u','N','n','S','s','Y','y','y','Z','z'];
		for (var y = 0; y < strAccentsLen; y++) {
			if (accents.indexOf(strAccents[y]) != -1) {
				strAccentsOut[y] = accentsOut[accents.indexOf(strAccents[y])];
			} else {
				strAccentsOut[y] = strAccents[y];
			}
		}
		strAccentsOut = strAccentsOut.join('');
		return strAccentsOut;
	},

	removeAccentsAndSpecialChars : function(dirtyText){
		
		dirtyText = Utils.removeAccents(dirtyText);
		return dirtyText.replace(/[^a-zA-Z0-9\s]/g, '');

	}

};